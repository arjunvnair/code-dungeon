#BlueJ class context
comment0.params=d\ height\ length
comment0.target=Level(java.lang.String,\ int,\ int)
comment1.params=filename
comment1.target=Level(java.lang.String)
comment10.params=p\ t
comment10.target=void\ placeTile(java.awt.Point,\ Tile)
comment11.params=p
comment11.target=java.awt.Point\ findAdjacentLegalTile(java.awt.Point)
comment12.params=
comment12.target=boolean\ containsBranching()
comment13.params=
comment13.target=boolean\ containsBridges()
comment14.params=start
comment14.target=void\ generatePath(java.awt.Point)
comment15.params=start\ generation
comment15.target=void\ generateBranchingPath(java.awt.Point,\ int)
comment16.params=
comment16.target=void\ placeBridges()
comment17.params=
comment17.target=void\ initializeMinMoves()
comment18.params=
comment18.target=void\ addMinMove()
comment19.params=
comment19.target=void\ printLevel()
comment2.params=name
comment2.target=void\ serialize(java.lang.String)
comment3.params=
comment3.target=Tile[][]\ getBoard()
comment4.params=
comment4.target=int\ getMinMoves()
comment5.params=
comment5.target=java.lang.String\ getDifficulty()
comment6.params=p
comment6.target=Tile\ getTileAt(java.awt.Point)
comment7.params=p
comment7.target=int\ howManyTraversableAdjacent(java.awt.Point)
comment8.params=p
comment8.target=boolean\ canBePlaced(java.awt.Point)
comment9.params=p
comment9.target=int\ howManyCanBePlacedAround(java.awt.Point)
numComments=20
